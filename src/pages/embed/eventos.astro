---
import Layout from "../../layouts/Layout.astro";
import "./eventos.css";
---

<Layout>
  <div id="container" class="container mx-auto my-5 px-4">
    <div class="flex flex-col lg:flex-row">
      <div class="reproductor p-4 w-full mb-4 lg:mb-0 rounded-lg shadow-lg">
        <div id="loader" class="flex justify-center items-center h-full w-full">
          <div
            class="loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-32 w-32 mb-4"
          >
          </div>
        </div>
        <iframe
          id="reproductor-iframe"
          class="rounded-lg hidden"
          style="aspect-ratio: 16/9;"
          allow="autoplay; encrypted-media"
          allowfullscreen
          height="90%"
          width="100%"></iframe>
        <div id="teatro-buttons">
          <button
            type="button"
            class="bg-green-600 hover:bg-green-500 text-white font-bold py-2 px-4 mt-4 rounded-full mb-4 w-full h-fit"
            onclick="location.reload()"
          >
            Recargar reproductor
          </button>
          <button
            type="button"
            id="btn-teatro"
            class="bg-green-600 hover:bg-green-500 text-white font-bold py-2 px-4 mt-4 rounded-full mb-4 w-full h-fit"
          >
            Modo teatro
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Función para obtener los parámetros de la URL
    function getParameterByName(name) {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(name) || "";
    }

    // Función para manejar la carga del reproductor
    function base64Decode(base64) {
      const binaryString = window.atob(base64); // Convert base64 to binary string
      const bytes = new Uint8Array(binaryString.length);
      for (let i = 0; i < binaryString.length; i++) {
        bytes[i] = binaryString.charCodeAt(i);
      }
      return new TextDecoder("utf-8").decode(bytes); // Decode binary string to UTF-8
    }

    function handleIframeLoad() {
      const embed = getParameterByName("embed") || getParameterByName("r");
      if (embed) {
        const iframe = document.getElementById("reproductor-iframe");
        const loader = document.getElementById("loader");
        if (iframe) {
          const decodedUrl = base64Decode(embed);
          iframe.src = decodedUrl;
          iframe.classList.remove("hidden");
        }
        if (loader) {
          loader.classList.add("hidden");
        }
      }
    }

    function toggleTeatroMode() {
      const container = document.getElementById("container");
      const iframe = document.getElementById("reproductor-iframe");
      const teatroButtons = document.getElementById("teatro-buttons");
      const header = document.querySelector("header");
      const footer = document.querySelector("footer");

      if (container && iframe && teatroButtons) {
        container.classList.toggle("teatro-mode");
        iframe.classList.toggle("teatro-mode");

        if (header) header.classList.toggle("hidden");
        if (footer) footer.classList.toggle("hidden");

        teatroButtons.classList.toggle("button-teatro-mode");
      }
    }

    document
      .getElementById("btn-teatro")
      .addEventListener("click", toggleTeatroMode);
    handleIframeLoad();
  </script>

  <style>
    .container {
      flex: 1;
    }
    .teatro-mode {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: black;
      z-index: 2;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    .button-teatro-mode {
      position: fixed;
      bottom: 1px;
      display: flex;
      z-index: 3;
      height: fit-content;
      right: 37%;
    }
  </style>
</Layout>
