---
const response = await fetch("http://localhost:4321/diaries.json").then((res) =>
  res.json()
);
const diaries = response.data;
---

<div
  class="flex flex-col mt-5 mx-auto align-middle py-3 px-4 bg-[#80808030] rounded-lg w-5/6"
>
  <input
    type="text"
    placeholder="Search games or categories"
    class="w-full bg-[#80808050] p-2 rounded-lg text-white border-2 border-green-700 py-3"
  />
  <ul class="w-full mt-2">
    {
      diaries.map((diary) => {
        return (
          <li class="bg-neutral-200 rounded-lg w-full px-3 mt-2">
            <div class="flex w-full justify-between flex-row font-bold text-xl cursor-pointer items-center">
              <div class="flex items-center text-base">
                {diary.attributes.deportes}
                <span class="team-color-icon" />
                <span class="match-name">
                  {diary.attributes.diary_description}
                </span>
              </div>
              <span class="match-time">{diary.attributes.diary_hour}</span>
            </div>
            <div class="submenu">
              <ul class="flex flex-col">
                {diary.attributes.embeds.data.map((embed) => {
                  return (
                    <li class="hover:text-green-600">
                      <div
                        class="flex items-center select-item"
                        data-embed={embed.attributes.embed_iframe}
                      >
                        <input type="checkbox" class="mr-2" />
                        {embed.attributes.embed_name}
                      </div>
                    </li>
                  );
                })}
              </ul>
            </div>
          </li>
        );
      })
    }
  </ul>
  <button
    id="create-url"
    class="bg-green-600 text-white font-bold py-2 px-4 rounded-full mt-4"
  >
    Create Multi-Stream URL
  </button>
  <style>
    /* ul {
      padding: 0;
    } */

    li {
      list-style: none;
    }
    .select-item {
      cursor: pointer;
      display: flex;
      align-items: center;
    }

    .select-item input[type="checkbox"] {
      pointer-events: none; /* So that the checkbox cannot be directly clicked separately */
    }
    .team-color-icon {
      display: flex;
      flex-direction: row;
      background-color: rgb(22 163 74 / var(--tw-text-opacity, 1));
      width: 5px;
      height: 20px;
      margin: 1rem;
    }

    .match-name {
      display: flex;
      flex-direction: column;
      font-size: 1.2rem;
      font-weight: lighter;
      color: #646464;
    }

    .match-time {
      font-size: 1rem;
      font-weight: lighter;
      background-color: #80808090;
      padding: 0 0.5rem;
      height: fit-content;
      border-radius: 20px;
    }

    .submenu {
      width: 100%;
      background-color: #e6e6e6;
      border-radius: 5px;
      font-size: 0.9rem;
      max-height: 0; /* Oculto por defecto */
      overflow: hidden;
      transition:
        max-height 0.3s ease,
        opacity 0.3s ease,
        padding 0.3s ease,
        /* Añade transición para el padding */ margin-top 0.3s ease; /* Añade transición para el margin-top */
      opacity: 0;
      padding: 0; /* Sin padding por defecto */
      margin-top: 0; /* Sin margin-top por defecto */
    }

    .submenu.visible {
      max-height: 500px; /* Ajusta según el contenido */
      opacity: 1;
      padding: 0.5rem; /* Aplica padding cuando es visible */
    }
    @keyframes slideIn {
      0% {
        max-height: 0;
      }
      50% {
        max-height: fit-content;
      }
      100% {
        max-height: fit-content;
      }
    }
  </style>
</div>

<script>
  document.querySelectorAll("li").forEach((li) => {
    li.addEventListener("click", (event) => {
      event.stopPropagation();

      // Hide all other submenus
      document.querySelectorAll(".submenu.visible").forEach((submenu) => {
        if (submenu !== li.querySelector(".submenu")) {
          submenu.classList.remove("visible");
        }
      });

      // Toggle the clicked submenu
      const submenu = li.querySelector(".submenu");
      if (submenu) {
        submenu.classList.toggle("visible");
      }
    });
  });
  document.querySelectorAll(".select-item").forEach((selectItem) => {
    selectItem.addEventListener("click", (event) => {
      event.stopPropagation();

      // Toggle checkbox checked state
      const checkbox = selectItem.querySelector("input[type='checkbox']");
      checkbox.checked = !checkbox.checked;
    });
  });

  const searchInput = document.querySelector('input[type="text"]');
  searchInput.addEventListener("input", function () {
    const query = searchInput.value.toLowerCase();
    const diaryItems = document.querySelectorAll("ul > li");

    diaryItems.forEach((item) => {
      const deportes =
        item.querySelector(".text-base")?.textContent.toLowerCase() || "";
      const description =
        item.querySelector(".match-name")?.textContent.toLowerCase() || "";

      if (deportes.includes(query) || description.includes(query)) {
        item.style.display = "block";
      } else {
        item.style.display = "none";
      }
    });
  });
  document.getElementById("create-url").addEventListener("click", () => {
    const selectedItems = [];
    document
      .querySelectorAll(".select-item input[type='checkbox']:checked")
      .forEach((checkbox) => {
        const embedIframe = checkbox
          .closest(".select-item")
          .getAttribute("data-embed");
        selectedItems.push(embedIframe);
      });

    const queryString = selectedItems.join(",");
    const url = `multi-stream/selected?q=${encodeURIComponent(queryString)}`;

    // Perform an action with the URL, such as redirecting
    window.location.href = url;
  });
</script>
